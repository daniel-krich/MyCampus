@page "/lecturer/class/{ClassId:guid}/quiz/create"

@inject IAuthenticationStateService authenticationState
@inject ICustomNavigationService navigationService
@inject IQuizManagerService quizManager
@inject IDbContextFactory<CampusContext> campusContextFactory


<RenderPermission Permission="UserPermissionsEnum.Lecturer" RedirectIfInvalid="true">

    <div class="container mb-4">
        @if (classModel?.Class != null && classModel?.Course != null)
        {
            <h2 class="mb-3">יצירת חידון חדש ל-@classModel.Class.Name</h2>
            <h4 class="text-muted mb-3">@classModel.Course.Name</h4>

            <div class="row p-3">
                <div class="col-12">
                    <div class="card shadow-sm position-relative">
                        <button class="btn-sm btn-dark fw-bold shadow-sm position-absolute top-0 start-0 translate-middle" @onclick="@(() => navigationService.NavigateTo($"/lecturer/class/{ClassId}/quizzes"))">
                            חזור <span class="oi oi-arrow-left"></span>
                        </button>
                        <div class="card-body mt-2">
                            @if(quizCreated)
                            {
                                <p class="h3 mt-3 mb-3 p-3 text-center">
                                    החידון נוצר בהצלחה
                                </p>
                            }
                            else
                            {
                                <EditForm Context="QuizCreateContext" OnValidSubmit="@OnQuizCreate" Model="this.quizCreate">
                                    <ObjectGraphDataAnnotationsValidator />
                                    <div class="form-group">

                                        <input type="text" class="form-control mb-5" id="quizNameInput" placeholder="כותרת החידון" @bind="quizCreate.Title" maxlength="50" required/>
                                    
                                        <p class="h3 text-center mt-5">הוסיפו שאלות ותשובות, אח"כ סמנו את התשובה הנכונה בעזרת כפתורי הרדיו</p>
                                        <p class="h5 text-center text-muted mb-5">בנוסף ניתן למחוק אלמנטים על ידי לחיצה על כפתורי המספור</p>

                                        @{ var questionId = 0; }
                                        @foreach(var question in quizCreate.Questions)
                                        {
                                            questionId++;

                                            <div class="question-box mb-5 position-relative">
                                                <span class="position-absolute top-0 start-100 translate-middle number-bubble-remove" @onclick="@(() => quizCreate.RemoveQuestion(question))">
                                                    <span>@questionId</span>
                                                </span>
                                                <input type="text" class="form-control mb-4" placeholder="שאלה" @bind="question.Question" maxlength="80" required/>

                                                @{ var answerId = 0; }
                                                @foreach(var answer in question.Answers)
                                                {
                                                    answerId++;
                                                    <div class="d-flex flex-row align-items-center mb-2">
                                                        <input class="form-check-input ms-2 me-4" type="radio" name="@($"q_{questionId}")" @onchange="@(() => OnQuizSelectRightAnswer(question, answer))" checked="@answer.IsRight">
                                                        <span class="number-bubble-remove white" @onclick="@(() => question.RemoveAnswer(answer))">
                                                            <span>@answerId</span>
                                                        </span>
                                                        <input type="text" class="form-control me-2" placeholder="תשובה" @bind="answer.Answer" maxlength="80" required/>
                                                    </div>
                                                }

                                                <div class="d-flex justify-content-center mt-3 mb-3">
                                                    <button type="button" class="btn btn-dark mb-1" @onclick="@question.AddAnswer">
                                                        <i class="fa-solid fa-plus ms-1"></i>
                                                        <span>הוסף תשובה</span>
                                                    </button>
                                                </div>
                                            </div>
                                        }


                                        <div class="d-flex justify-content-center">
                                            <div class="d-grid gap-2 d-md-block mt-3 mb-3">
                                                <button type="button" class="btn btn-dark mb-1" @onclick="@quizCreate.AddQuestion">
                                                    <i class="fa-solid fa-plus ms-1"></i>
                                                    <span>הוסף שאלה</span>
                                                </button>
                                                <button type="submit" class="btn btn-dark mb-1">
                                                    @if (inAction)
                                                    {
                                                        <span class="spinner-border spinner-border-sm ms-1" role="status" aria-hidden="true"></span>
                                                    }
                                                    <span>צור חידון</span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </EditForm>
                                <div class="mt-2 mb-2">
                                    <DismissibleAlert @ref="alert" class="m-2 shadow-sm"/>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</RenderPermission>


@code {
    [Parameter] public Guid ClassId { get; set; }

    private ClassModel? classModel;

    private DismissibleAlert? alert;

    private bool quizCreated;

    private bool inAction;

    private QuizCreationModel quizCreate = new();

    protected override async Task OnInitializedAsync()
    {
        using(var dbContext = await campusContextFactory.CreateDbContextAsync())
        {
            if (authenticationState.User?.Id != null)
            {
                var user = await dbContext.Users.FindAsync(authenticationState.User.Id);
                if(user != null)
                {
                    classModel = await (from classEntity in dbContext.Classes.Include(x => x.Course)
                                        where classEntity.LecturerId == user.Id && classEntity.Id == ClassId
                                        select new ClassModel { Class = classEntity, Course = classEntity.Course, Lecturer = classEntity.Lecturer }).FirstOrDefaultAsync();
                    if(classModel == null)
                    {
                        navigationService.NavigatePreviousOrDefault(true);
                    }
                }
                else
                {
                    navigationService.NavigatePreviousOrDefault(true);
                }
            }
        }
    }

    private Task OnQuizSelectRightAnswer(QuizQuestionModel question, QuizAnswerModel answer)
    {
        question.Answers.ForEach(x => x.IsRight = false);
        answer.IsRight = true;
        return Task.CompletedTask;
    }

    private async Task OnQuizCreate()
    {
        if (!inAction)
        {
            try
            {
                if (classModel != null && classModel.Class != null)
                {
                    inAction = true;
                    await quizManager.CreateLecturerQuiz(classModel.Class.Id, quizCreate);
                    quizCreated = true;
                }
            }
            catch(QuizCreateException ex)
            {
                alert?.ShowWarning(ex.Message);
            }
            catch
            {
                alert?.ShowError("אירעה שגיאה באת יצירת החידון");
            }
            finally
            {
                inAction = false;
            }
        }
    }
}
