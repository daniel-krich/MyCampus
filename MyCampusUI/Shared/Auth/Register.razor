@inject IDbContextFactory<CampusContext> campusContextFactory

<EditForm Context="RegisterContext" OnValidSubmit="@SubmitAsync" Model="this.register">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <div class="col">
            <label for="usernameInput" class="form-label">שם משתמש</label>
            <input type="text" class="form-control" @bind="@register.Username" id="usernameInput" minlength="5" maxlength="30" required>
        </div>
        <div class="col">
            <label for="passwordInput" class="form-label">סיסמה</label>
            <input type="password" class="form-control" @bind="@register.Password" id="passwordInput" minlength="8" maxlength="30" required>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <label for="firstnameInput" class="form-label">שם פרטי</label>
            <input type="text" class="form-control" @bind="@register.FirstName" id="firstnameInput" minlength="2" maxlength="30" required>
        </div>
        <div class="col">
            <label for="lastnameInput" class="form-label">שם משפחה</label>
            <input type="text" class="form-control" @bind="@register.LastName" id="lastnameInput" minlength="2" maxlength="30" required>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <label for="emailInput" class="form-label">דוא"ל</label>
            <input type="email" class="form-control" @bind="@register.Email" id="emailInput" minlength="10" maxlength="128" required>
        </div>
        <div class="col">
            <label for="phoneInput" class="form-label">מספר טלפון</label>
            <input type="tel" class="form-control" @bind="@register.PhoneNumber" id="phoneInput" minlength="10" maxlength="16" required>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <label for="cityInput" class="form-label">עיר</label>
            <input type="text" class="form-control" @bind="@register.City" id="cityInput" minlength="2" maxlength="32" required>
        </div>
        <div class="col">
            <label for="genderSelect" class="form-label">מין</label>
            <InputSelect id="genderSelect" class="form-select" @bind-Value="@register.Gender" required>
              <option selected></option>
              <option value="@(nameof(GenderEnum.Male))">זכר</option>
              <option value="@(nameof(GenderEnum.Female))">נקבה</option>
              <option value="@(nameof(GenderEnum.Other))">אחר</option>
            </InputSelect>
        </div>
    </div>
    <div class="mb-3 form-check">
        <label class="form-check-label" for="confirmInput">אני מסכים לכל תנאי השימוש</label>
        <input type="checkbox" class="form-check-input float-end ms-2" id="confirmInput" required>
    </div>
    <button type="submit" disabled="@inAction" class="btn btn-primary rounded-pill w-100 mt-3 mb-3">
        @if (inAction)
        {
            <span class="spinner-border spinner-border-sm ms-1" role="status" aria-hidden="true"></span>
        }
        <span>הרשמה</span>
    </button>
</EditForm>
<DismissibleAlert @ref="@alert" class="shadow-sm"/>

@code {
    private DismissibleAlert? alert;
    private RegisterModel register = new();
    private bool inAction;
    private async Task SubmitAsync()
    {
        if (!inAction)
        {
            inAction = true;
            using (var dbContext = await campusContextFactory.CreateDbContextAsync())
            {
                try
                {
                    using var hmac = new HMACSHA512();

                    UserEntity user = new UserEntity
                        {
                            Username = register.Username,
                            PasswordHash = hmac.ComputeHash(Encoding.UTF8.GetBytes(register.Password)),
                            PasswordSalt = hmac.Key,
                            FirstName = register.FirstName,
                            LastName = register.LastName,
                            Email = register.Email,
                            PhoneNumber = register.PhoneNumber,
                            Country = register.Country,
                            City = register.City,
                            Gender = register.Gender ?? GenderEnum.Other,
                            Permissions = UserPermissionsEnum.WaitingApproval
                        };

                    dbContext.Users.Add(user);
                    await dbContext.SaveChangesAsync();
                    alert?.ShowSuccess("המשתמש נוצר בהצלחה, נותר רק לחכות לאישור הנהלת הקמפוס");
                }
                catch (Exception)
                {
                    alert?.ShowError("אירעה שגיאה, יכול להיות שיש כבר משתמש עם אותם פרטים");
                }
            }
            inAction = false;
        }
    }
}
