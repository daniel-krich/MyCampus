@inject IDbContextFactory<CampusContext> campusContextFactory
@inject IAuthenticationStateService authService
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager

<EditForm Context="LoginContext" OnValidSubmit="@SubmitAsync" Model="this.login">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="usernameInput" class="form-label">שם משתמש</label>
        <input type="text" class="form-control" @bind="login.Username" id="usernameInput" minlength="5" maxlength="30" required>
    </div>
    <div class="mb-3">
        <label for="passwordInput" class="form-label">סיסמה</label>
        <input type="password" class="form-control" @bind="login.Password" id="passwordInput"  minlength="8" maxlength="30" required>
    </div>
    <div class="mb-3 form-check">
        <label class="form-check-label" for="rememberInput">זכור אותי</label>
        <input type="checkbox" class="form-check-input float-end ms-2" @bind="login.RememberUser" id="rememberInput">
    </div>
    <button type="submit" disabled="@inAction" class="btn btn-primary rounded-pill w-100 mt-3 mb-3">
        @if (inAction)
        {
            <span class="spinner-border spinner-border-sm ms-1" role="status" aria-hidden="true"></span>
        }
        <span>התחברות</span>
    </button>
</EditForm>
<DismissibleAlert Message="@errorMessage" Classes="alert-warning shadow-sm"/>

@code {
    private ItemRef<string> errorMessage = new("");
    private LoginModel login = new();
    private bool inAction;
    private async Task SubmitAsync()
    {
        if (!inAction)
        {
            inAction = true;
            try
            {
                CookieModel cookie = await authService.CreateJwtSessionToken(login.Username, login.Password, login.RememberUser);
                await jsRuntime.WriteCookie(CookiesConst.AccessCookie, cookie.Token, cookie.ExpireAt);
                navManager.NavigateTo("/", true);
            }
            catch (UnapprovedUserException)
            {
                errorMessage.Item = "המשתמש טרם אושר בידי הנהלת הקמפוס";
                inAction = false;
            }
            catch(InvalidCredentialsException)
            {
                errorMessage.Item = "המשתמש או הסיסמה אינם נכונים";
                inAction = false;
            }
        }
    }
}
